# AWSTemplateFormatVersion: 2010-09-09
# Description: ---
# Metadata: 

# Parameters: 

# Mappings: 

# Conditions: 
Transform: AWS::Serverless-2016-10-31
Resources:
  S1:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      BucketName: 'a3-s1-test'
  S1Policy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S1
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:PutObject'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref S1
                - /*
            Principal: '*'
  a3Artifacts:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: a3-artifacts
    DeletionPolicy: Retain
  BodyReader:
    Type: 'AWS::Serverless::Function'
    DeletionPolicy: Retain
    Properties:
      Architectures: ['x86_64']
      Runtime: python3.8
      CodeUri: body-reader/body-reader.zip
      Handler: lambda_function.lambda_handler
      FunctionName: a3-body-reader
      Events:
        S3Event:
          Type: S3
          Properties:
            Bucket:
              Ref: S1
            Events: s3:ObjectCreated:*
      Role: arn:aws:iam::828815413195:role/a3-body-reader-role
  BodyReaderRole:
    Type: 'AWS::IAM::Role'
    DeletionPolicy: Retain
    Properties:
      RoleName: a3-body-reader-role
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: [sts:AssumeRole]
      Policies:
      - PolicyName: GetS3Objects
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
            - s3:GetObject
            - s3:GetObjectAttributes
            - s3:PutObject
            Resource: arn:aws:s3:::*
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  CloudFormationRole:
    Type: 'AWS::IAM::Role'
    DeletionPolicy: Retain
    Properties:
      RoleName: a3-cloudformation
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
          Action: [sts:AssumeRole]
      Policies:
      - PolicyName: CloudFormation
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
            - cloudformation:SetStackPolicy
            - iam:PassRole
            - cloudformation:CreateStack
            - cloudformation:DeleteStack
            - cloudformation:UpdateStack
            - cloudformation:CreateChangeSet
            - cloudformation:DescribeChangeSet
            - cloudformation:ExecuteChangeSet
            - cloudformation:DeleteChangeSet
            - cloudformation:ValidateTemplate
            - cloudformation:DescribeStacks
            Resource: "*"
      - PolicyName: create-s3-a3
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
            - s3:PutBucketNotification
            - s3:PutBucketPolicy
            - s3:CreateBucket
            - s3:DeleteBucketPolicy
            Resource: arn:aws:s3:::*
      - PolicyName: deploy-lambda-a3
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
            - lambda:CreateFunction
            - lambda:UpdateFunctionCode
            - lambda:TagResource
            - lambda:AddPermission
            - lambda:GetLayerVersion
            - lambda:GetFunction
            - lambda:UpdateFunctionConfiguration
            - lambda:GetFunctionConfiguration
            Resource: arn:aws:lambda:us-east-1:828815413195:function:a3-body-reader
      - PolicyName: get-s3-a3
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
            - s3:PutAnalyticsConfiguration
            - s3:GetObjectVersionTagging
            - s3:CreateBucket
            - s3:ReplicateObject
            - s3:GetObjectAcl
            - s3:GetBucketObjectLockConfiguration
            - s3:DeleteBucketWebsite
            - s3:GetIntelligentTieringConfiguration
            - s3:PutLifecycleConfiguration
            - s3:GetObjectVersionAcl
            - s3:DeleteObject
            - s3:GetBucketPolicyStatus
            - s3:GetObjectRetention
            - s3:GetBucketWebsite
            - s3:PutReplicationConfiguration
            - s3:GetObjectAttributes
            - s3:PutObjectLegalHold
            - s3:InitiateReplication
            - s3:GetObjectLegalHold
            - s3:GetBucketNotification
            - s3:PutBucketCORS
            - s3:GetReplicationConfiguration
            - s3:ListMultipartUploadParts
            - s3:PutObject
            - s3:GetObject
            - s3:PutBucketNotification
            - s3:PutBucketLogging
            - s3:GetAnalyticsConfiguration
            - s3:PutBucketObjectLockConfiguration
            - s3:GetObjectVersionForReplication
            - s3:GetLifecycleConfiguration
            - s3:GetInventoryConfiguration
            - s3:GetBucketTagging
            - s3:PutAccelerateConfiguration
            - s3:DeleteObjectVersion
            - s3:GetBucketLogging
            - s3:ListBucketVersions
            - s3:RestoreObject
            - s3:ListBucket
            - s3:GetAccelerateConfiguration
            - s3:GetObjectVersionAttributes
            - s3:GetBucketPolicy
            - s3:PutEncryptionConfiguration
            - s3:GetEncryptionConfiguration
            - s3:GetObjectVersionTorrent
            - s3:AbortMultipartUpload
            - s3:GetBucketRequestPayment
            - s3:GetObjectTagging
            - s3:GetMetricsConfiguration
            - s3:GetBucketOwnershipControls
            - s3:DeleteBucket
            - s3:PutBucketVersioning
            - s3:GetBucketPublicAccessBlock
            - s3:ListBucketMultipartUploads
            - s3:PutIntelligentTieringConfiguration
            - s3:PutMetricsConfiguration
            - s3:PutBucketOwnershipControls
            - s3:GetBucketVersioning
            - s3:GetBucketAcl
            - s3:PutInventoryConfiguration
            - s3:GetObjectTorrent
            - s3:PutBucketWebsite
            - s3:PutBucketRequestPayment
            - s3:PutObjectRetention
            - s3:GetBucketCORS
            - s3:GetBucketLocation
            - s3:ReplicateDelete
            - s3:GetObjectVersion
            Resource:
            - arn:aws:s3:::a3-artifacts
            - arn:aws:s3:::a3-artifacts/*
          - Sid: VisualEditor1
            Effect: Allow
            Action:
            - s3:ListStorageLensConfigurations
            - s3:ListAccessPointsForObjectLambda
            - s3:GetAccessPoint
            - s3:GetAccountPublicAccessBlock
            - s3:ListAllMyBuckets
            - s3:ListAccessPoints
            - s3:ListJobs
            - s3:PutStorageLensConfiguration
            - s3:ListMultiRegionAccessPoints
            - s3:CreateJob
            Resource: "*"
      - PolicyName: iam-a3
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
            - iam:GetRole
            - iam:CreateRole
            - iam:DeleteRole
            - iam:AttachRolePolicy
            - iam:PutRolePolicy
            - iam:GetRolePolicy
            Resource: "*"
      - PolicyName: list-lambda-tags-a3
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action: lambda:ListTags
            Resource:
            - arn:aws:lambda:us-east-1:828815413195:function:a3-body-reader